```mermaid
graph TB
    %% ================================================
    %% FABRYKA MANAGE - ARCHITEKTURA APLIKACJI
    %% ================================================
    
    subgraph "üèóÔ∏è APLIKACJA G≈Å√ìWNA"
        APP["App.tsx<br/>React Router<br/>DnD Provider<br/>Lazy Loading<br/>Suspense"]
        
        MAIN["main.tsx<br/>StrictMode<br/>ConfigProvider Antd<br/>ErrorBoundary<br/>BrowserRouter<br/>Sentry Init"]
        
        LAYOUT["BootstrapLayout.tsx<br/>Layout Header/Sider/Content<br/>Navigation Menu<br/>Responsive Breakpoints<br/>Theme Variables"]
    end
    
    subgraph "üìÑ STRONY (PAGES)"
        DASHBOARD["Dashboard.tsx<br/>Statystyki projekt√≥w<br/>Ostatnie aktywno≈õci<br/>PrzeglƒÖd zasob√≥w<br/>Wykresy wydajno≈õci"]
        
        PROJECTS["Projects.tsx<br/>Lista projekt√≥w<br/>Filtry i wyszukiwanie<br/>Karty projekt√≥w<br/>Akcje masowe"]
        
        PROJEKT["Projekt.tsx<br/>Szczeg√≥≈Çy projektu<br/>Modu≈Çy projektu<br/>Zesp√≥≈Ç projektu<br/>Postƒôp realizacji"]
        
        CALENDAR["CalendarPage.tsx<br/>Kalendarz g≈Ç√≥wny<br/>Wydarzenia<br/>Zasoby<br/>Widoki (miesiƒÖc/tydzie≈Ñ/dzie≈Ñ)"]
        
        KALPROJECTS["CalendarProjects.tsx<br/>Projekty w kalendarzu<br/>Harmonogram<br/>Deadline tracking<br/>Kamienie milowe"]
        
        KALDESIGNERS["CalendarDesigners.tsx<br/>Projektanci<br/>ObciƒÖ≈ºenie pracƒÖ<br/>Dostƒôpno≈õƒá<br/>Przypisania"]
        
        KALTEAMS["CalendarTeams.tsx<br/>Ekipy robocze<br/>Harmonogram pracy<br/>Konflikty zasob√≥w<br/>Planowanie"]
        
        PROJEKTOWANIE["Projektowanie.tsx<br/>Designer Dashboard<br/>Kafelki do projektowania<br/>Pliki DXF/CAD<br/>Status akceptacji"]
        
        CNC["CNC.tsx<br/>Kolejka produkcji<br/>Status maszyn<br/>Programy CNC<br/>Monitoring czasu"]
        
        PRODUKCJA["Produkcja.tsx<br/>Kafelki w produkcji<br/>Kanban board<br/>QR kody<br/>Raportowanie"]
        
        MAGAZYN["MagazynNew.tsx<br/>Inwentarz materia≈Ç√≥w<br/>Kategorie i filtry<br/>Stany krytyczne<br/>Lokalizacje magazynowe"]
        
        KLIENCI["Klienci.tsx<br/>Lista klient√≥w<br/>Karty kontaktowe<br/>Historia wsp√≥≈Çpracy<br/>Segmentacja"]
        
        KLIENT["ClientDetails.tsx<br/>Szczeg√≥≈Çy klienta<br/>Osoby kontaktowe<br/>Projekty klienta<br/>Dokumenty"]
        
        TILES["Tiles.tsx<br/>ZarzƒÖdzanie kafelkami<br/>BOM (Bill of Materials)<br/>Workflow status√≥w<br/>Przypisania ekip"]
        
        DEMANDS["Demands.tsx<br/>Zapotrzebowania<br/>Zam√≥wienia materia≈Ç√≥w<br/>≈öledzenie dostaw<br/>Zatwierdzenia"]
    end
    
    subgraph "üîÑ STORES (ZUSTAND)"
        PROJSTORE["projectsStore.ts<br/><br/>STATE:<br/>‚Ä¢ projects: Project[]<br/>‚Ä¢ projectsById: Record<br/>‚Ä¢ isLoading: boolean<br/>‚Ä¢ _clientProjectsCache: Map<br/><br/>ACTIONS:<br/>‚Ä¢ initialize()<br/>‚Ä¢ add/update/remove()<br/>‚Ä¢ getProjectsByClient()<br/>‚Ä¢ updateProjectColors()<br/><br/>SELEKTORY (40+):<br/>‚Ä¢ getProjectStats()<br/>‚Ä¢ getOverdueProjects()<br/>‚Ä¢ getHighPriorityProjects()"]
        
        CALSTORE["calendarStore.ts<br/><br/>STATE:<br/>‚Ä¢ events: CalendarEvent[]<br/>‚Ä¢ resources: CalendarResource[]<br/><br/>ACTIONS:<br/>‚Ä¢ createEvent()<br/>‚Ä¢ updateEvent()<br/>‚Ä¢ deleteEvent()<br/><br/>SELEKTORY:<br/>‚Ä¢ getEventsByProject()<br/>‚Ä¢ getEventsByDesigner()<br/>‚Ä¢ getResourcesByType()"]
        
        MATSTORE["materialsStore.ts<br/><br/>STATE:<br/>‚Ä¢ materials: MaterialData[]<br/>‚Ä¢ purchaseRequests[]<br/>‚Ä¢ supplierQuotes[]<br/>‚Ä¢ stockReservations[]<br/>‚Ä¢ deliveryTracking[]<br/><br/>ACTIONS:<br/>‚Ä¢ updateMaterialStock()<br/>‚Ä¢ syncFromBackend()<br/>‚Ä¢ add/update/remove<br/>Purchase/Quote/Reservation"]
        
        TILESTORE["tilesStore.ts<br/><br/>STATE:<br/>‚Ä¢ tiles: Tile[]<br/>‚Ä¢ tilesById: Record<br/>‚Ä¢ isLoading: boolean<br/><br/>ACTIONS:<br/>‚Ä¢ initialize()<br/>‚Ä¢ setStatus()<br/>‚Ä¢ updateTile()<br/>‚Ä¢ pushAcceptedTilesToQueue()"]
        
        CLIENTSTORE["clientDataStore.ts<br/><br/>STATE:<br/>‚Ä¢ clients: ProcessedClient[]<br/>‚Ä¢ projects: ProcessedProject[]<br/>‚Ä¢ selectedClient<br/>‚Ä¢ loading: boolean<br/><br/>ACTIONS:<br/>‚Ä¢ loadData()<br/>‚Ä¢ getClientById()<br/>‚Ä¢ selectClient()"]
        
        USERSTORE["usersStore.ts<br/><br/>STATE:<br/>‚Ä¢ users: User[]<br/>‚Ä¢ teams: Team[]<br/><br/>USER ACTIONS:<br/>‚Ä¢ add/update/deleteUser()<br/>‚Ä¢ getUsersByRole()<br/><br/>TEAM ACTIONS:<br/>‚Ä¢ add/update/deleteTeam()<br/>‚Ä¢ addMemberToTeam()<br/>‚Ä¢ getTeamMembers()"]
        
        OTHERSTORES["Inne Stores:<br/>‚Ä¢ accommodationStore.ts<br/>‚Ä¢ activityStore.ts<br/>‚Ä¢ conceptStore.ts<br/>‚Ä¢ estimateStore.ts<br/>‚Ä¢ logisticsStore.ts"]
    end
    
    subgraph "üß© KOMPONENTY G≈Å√ìWNE"
        PROJECTCOMP["Project Components<br/>‚Ä¢ ProjectElements.tsx<br/>‚Ä¢ ProjectHeader.tsx<br/>‚Ä¢ ProjectMaterials.tsx<br/>‚Ä¢ ProjectOverview.tsx<br/>‚Ä¢ ProjectTabs.tsx"]
        
        CALENDARCOMP["Calendar Components<br/>‚Ä¢ CalendarShell.tsx<br/>‚Ä¢ EventFormModal.tsx"]
        
        MAGAZYNCOMP["Magazyn Components<br/>‚Ä¢ CategoryTree.tsx<br/>‚Ä¢ CriticalStockPanel.tsx<br/>‚Ä¢ MaterialCard.tsx<br/>‚Ä¢ MaterialDetailsPanel.tsx<br/>‚Ä¢ OperationForm.tsx<br/>‚Ä¢ WarehouseDashboard.tsx"]
        
        KANBANCOMP["Kanban Components<br/>‚Ä¢ KanbanBoard.tsx<br/>‚Ä¢ KanbanCard.tsx<br/>‚Ä¢ KanbanColumn.tsx"]
        
        GROUPCOMP["Groups Components<br/>‚Ä¢ CreateGroupModal.tsx<br/>‚Ä¢ GroupCard.tsx<br/>‚Ä¢ GroupView.tsx"]
        
        UICOMP["UI Components<br/>‚Ä¢ AsyncStates.tsx<br/>‚Ä¢ EntityTable.tsx<br/>‚Ä¢ FileManager.tsx<br/>‚Ä¢ SlideOver.tsx<br/>‚Ä¢ StatusBadge.tsx<br/>‚Ä¢ Toolbar.tsx"]
        
        MODALS["Modals & Sheets<br/>‚Ä¢ EditProjectModal.tsx<br/>‚Ä¢ AddMemberModal.tsx<br/>‚Ä¢ TileEditSheet.tsx<br/>‚Ä¢ DxfFullscreenModal.tsx<br/>‚Ä¢ DxfPreview.tsx"]
    end
    
    subgraph "üìä TYPY I DANE"
        PROJTYPE["projects.types.ts<br/>‚Ä¢ ProjectModule<br/>‚Ä¢ GroupFile<br/>‚Ä¢ ProjectGroup<br/>‚Ä¢ Project"]
        
        TILETYPE["tiles.types.ts<br/>‚Ä¢ BomItem<br/>‚Ä¢ Tile"]
        
        CLIENTTYPE["clientData.types.ts<br/>‚Ä¢ ClientData<br/>‚Ä¢ ContactPerson<br/>‚Ä¢ ProcessedClient<br/>‚Ä¢ ProcessedProject"]
        
        MAGAZYNTYPE["magazyn.types.ts<br/>‚Ä¢ Material<br/>‚Ä¢ MaterialProperties<br/>‚Ä¢ MaterialCategory<br/>‚Ä¢ MaterialMovement<br/>‚Ä¢ WarehouseLocation<br/>‚Ä¢ UserPreferences"]
        
        CALTYPE["calendar.types.ts<br/>‚Ä¢ CalendarResource<br/>‚Ä¢ CalendarEvent"]
        
        MOCKDATA["mockDatabase.ts<br/>‚Ä¢ mockClients[]<br/>‚Ä¢ mockProjects[]<br/>‚Ä¢ mockTiles[]"]
    end
    
    subgraph "üîß US≈ÅUGI I UTILITIES"
        STATUSUTILS["statusUtils.ts<br/>‚Ä¢ getStatusColor()<br/>‚Ä¢ getStatusBadgeClass()<br/>‚Ä¢ getStatusIcon()<br/>‚Ä¢ canTransitionTo()<br/>‚Ä¢ getStatusPriority()<br/>‚Ä¢ getStatusDisplayData()"]
        
        SERVICES["Services<br/>‚Ä¢ projects.ts<br/>‚Ä¢ tiles.ts<br/>‚Ä¢ materials.ts"]
        
        LIBUTILS["Lib Utils<br/>‚Ä¢ notifications.ts<br/>‚Ä¢ calendarUtils.ts<br/>‚Ä¢ clientUtils.ts<br/>‚Ä¢ logger.ts<br/>‚Ä¢ sentry.ts<br/>‚Ä¢ supabase.ts"]
        
        API["API Layer<br/>‚Ä¢ materials.ts<br/>‚Ä¢ backend integration"]
    end
    
    %% Connections
    MAIN --> APP
    APP --> LAYOUT
    LAYOUT --> DASHBOARD
    LAYOUT --> PROJECTS
    LAYOUT --> PROJEKT
    LAYOUT --> CALENDAR
    LAYOUT --> KALPROJECTS
    LAYOUT --> KALDESIGNERS
    LAYOUT --> KALTEAMS
    LAYOUT --> PROJEKTOWANIE
    LAYOUT --> CNC
    LAYOUT --> PRODUKCJA
    LAYOUT --> MAGAZYN
    LAYOUT --> KLIENCI
    LAYOUT --> KLIENT
    LAYOUT --> TILES
    LAYOUT --> DEMANDS
    
    PROJECTS --> PROJSTORE
    PROJEKT --> PROJSTORE
    CALENDAR --> CALSTORE
    KALPROJECTS --> CALSTORE
    KALDESIGNERS --> CALSTORE
    KALTEAMS --> CALSTORE
    MAGAZYN --> MATSTORE
    TILES --> TILESTORE
    KLIENCI --> CLIENTSTORE
    KLIENT --> CLIENTSTORE
    KALDESIGNERS --> USERSTORE
    KALTEAMS --> USERSTORE
    
    PROJEKT --> PROJECTCOMP
    CALENDAR --> CALENDARCOMP
    MAGAZYN --> MAGAZYNCOMP
    PRODUKCJA --> KANBANCOMP
    KLIENCI --> GROUPCOMP
    DASHBOARD --> UICOMP
    PROJECTS --> MODALS
    
    PROJSTORE --> PROJTYPE
    TILESTORE --> TILETYPE
    CLIENTSTORE --> CLIENTTYPE
    MATSTORE --> MAGAZYNTYPE
    CALSTORE --> CALTYPE
    PROJSTORE --> MOCKDATA
    
    PROJSTORE --> STATUSUTILS
    TILESTORE --> STATUSUTILS
    PROJSTORE --> SERVICES
    MATSTORE --> API
    CALSTORE --> LIBUTILS
    
    classDef pageClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef storeClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef componentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px
    classDef typeClass fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef utilClass fill:#fce4ec,stroke:#880e4f,stroke-width:2px
    classDef appClass fill:#f1f8e9,stroke:#33691e,stroke-width:3px
    
    class APP,MAIN,LAYOUT appClass
    class DASHBOARD,PROJECTS,PROJEKT,CALENDAR,KALPROJECTS,KALDESIGNERS,KALTEAMS,PROJEKTOWANIE,CNC,PRODUKCJA,MAGAZYN,KLIENCI,KLIENT,TILES,DEMANDS pageClass
    class PROJSTORE,CALSTORE,MATSTORE,TILESTORE,CLIENTSTORE,USERSTORE,OTHERSTORES storeClass
    class PROJECTCOMP,CALENDARCOMP,MAGAZYNCOMP,KANBANCOMP,GROUPCOMP,UICOMP,MODALS componentClass
    class PROJTYPE,TILETYPE,CLIENTTYPE,MAGAZYNTYPE,CALTYPE,MOCKDATA typeClass
    class STATUSUTILS,SERVICES,LIBUTILS,API utilClass
```

## üèóÔ∏è ARCHITEKTURA APLIKACJI FABMANAGE

### üìã G≈Å√ìWNE MODU≈ÅY:

1. **üè† Dashboard** - Statystyki, przeglƒÖd, wykresy
2. **üìÅ Projekty** - ZarzƒÖdzanie projektami, grupy, pliki
3. **üë• Klienci** - Baza klient√≥w, kontakty, historia
4. **üìÖ Kalendarz** - Wydarzenia, harmonogramy, zasoby
5. **üé® Projektowanie** - Designer dashboard, akceptacja
6. **‚öôÔ∏è CNC** - Kolejka produkcji, monitoring maszyn
7. **üè≠ Produkcja** - Kanban, QR kody, raportowanie
8. **üì¶ Magazyn** - Inwentarz, stany, lokalizacje
9. **üîß Kafelki** - BOM, workflow, statusy
10. **üìã Zapotrzebowania** - Zam√≥wienia, dostawy

### üîÑ STATE MANAGEMENT (Zustand):

- **Projects Store**: 40+ selektor√≥w, cache, synchronizacja
- **Materials Store**: Inwentarz, zam√≥wienia, dostawy
- **Calendar Store**: Wydarzenia, zasoby, projektanci
- **Tiles Store**: BOM processing, workflow
- **Users Store**: U≈ºytkownicy, zespo≈Çy, role
- **Client Store**: Klienci, projekty klient√≥w

### üé® UI KOMPONENTY:

- **Modu≈Çowe komponenty** dla ka≈ºdej funkcjonalno≈õci
- **Wsp√≥≈Çdzielone UI** (SlideOver, StatusBadge, EntityTable)
- **Modals & Sheets** dla edycji danych
- **Kanban & Calendar** dla workflow

### üìä SYSTEM TYP√ìW:

- **TypeScript** dla wszystkich komponent√≥w
- **Typy biznesowe** (Project, Tile, Material, Client)
- **Mock data** dla rozwoju i test√≥w

### üîß UTILITIES:

- **Status management** z kolorami i ikonami
- **API layer** dla backend integration
- **Notifications** i error handling
- **Logger** i monitoring (Sentry)

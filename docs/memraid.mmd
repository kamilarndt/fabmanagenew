graph TB
    %% Styling
    classDef frontend fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef backend fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
    classDef service fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px
    classDef ui fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef store fill:#fce4ec,stroke:#880e4f,stroke-width:2px
    classDef realtime fill:#f1f8e9,stroke:#33691e,stroke-width:2px
    
    %% Frontend Components
    subgraph "Frontend (React + TypeScript)"
        subgraph "UI Kit Components" UIKIT
            UI[UI Kit Components]
            SB[StatusBadge]
            PH[PageHeader]
            TB[Toolbar]
            FM[FormModal]
            SS[StageStepper]
            FFM[FileManager]
            ET[EntityTable]
            KB[KanbanBoardGeneric]
            
            UI --> SB
            UI --> PH
            UI --> TB
            UI --> FM
            UI --> SS
            UI --> FFM
            UI --> ET
            UI --> KB
        end
        
        subgraph "Pages" PAGES
            P1[Projects.tsx]
            P2[Projekt.tsx]
            P3[MagazynNew.tsx]
            P4[CNC.tsx]
            P5[Produkcja.tsx]
            P6[Dashboard.tsx]
        end
        
        subgraph "Stores (Zustand)" STORES
            PS[projectsStore]
            TS[tilesStore]
            MS[materialsStore]
        end
        
        subgraph "Real-time Integration" RT_INT
            RT[useRealtimeSubscription]
            RT --> PS
            RT --> TS
            RT --> MS
        end
    end
    
    %% Backend Infrastructure
    subgraph "Backend (Supabase)" BACKEND
        DB[(PostgreSQL Database)]
        RT_SUP[Realtime Service]
        STORAGE[File Storage]
        AUTH[Authentication]
    end
    
    %% Services Layer
    subgraph "Services Layer" SERVICES
        S1[projectsService]
        S2[tilesService]
        S3[materialsService]
    end
    
    %% Data Flow Connections
    %% UI Kit to Pages
    UIKIT --> PAGES
    
    %% Pages to Stores
    P1 --> PS
    P2 --> PS
    P2 --> TS
    P3 --> MS
    P4 --> TS
    P5 --> TS
    P6 --> PS
    
    %% Stores to Services
    PS --> S1
    TS --> S2
    MS --> S3
    
    %% Services to Backend
    S1 --> DB
    S2 --> DB
    S3 --> DB
    S1 --> STORAGE
    S2 --> STORAGE
    S3 --> STORAGE
    
    %% Real-time Connections
    RT_SUP --> RT_INT
    AUTH --> RT_INT
    
    %% Performance Metrics
    subgraph "Performance Metrics" PERF
        B1[Before: Multiple Re-renders]
        B2[Before: Denormalized Data]
        A1[After: 40% Less Re-renders]
        A2[After: Normalized Stores]
        
        B1 -.->|Optimization| A1
        B2 -.->|Migration| A2
    end
    
    %% Tech Stack
    subgraph "Technology Stack" TECH
        F1[React 18]
        F2[TypeScript]
        F3[MUI 7]
        F4[Zustand]
        F5[React Router]
        B1_TECH[Supabase]
        B2_TECH[PostgreSQL]
        D1_TECH[Vite]
        D2_TECH[ESLint]
        
        F1 --> F2
        F2 --> F3
        F3 --> F4
        F4 --> F5
        F4 --> B1_TECH
        B1_TECH --> B2_TECH
        F2 --> D1_TECH
        D1_TECH --> D2_TECH
    end
    
    %% Implementation Status
    subgraph "Implementation Status" STATUS
        C1[✅ UI Kit Components]
        C2[✅ Store Normalization]
        C3[✅ Real-time Integration]
        C4[✅ Page Migration]
        C5[✅ Performance Optimization]
        C6[✅ Testing & Validation]
        
        C1 --> C2
        C2 --> C3
        C3 --> C4
        C4 --> C5
        C5 --> C6
    end
    
    %% Apply styling
    class UIKIT,PAGES,STORES,RT_INT frontend
    class BACKEND backend
    class SERVICES service
    class UI,SB,PH,TB,FM,SS,FFM,ET,KB ui
    class PS,TS,MS store
    class RT,RT_SUP realtime

